// Code generated by MockGen. DO NOT EDIT.
// Source: ./service.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStore is a mock of Store interface
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// GetMusicByTitle mocks base method
func (m *MockStore) GetMusicByTitle(ctx context.Context, title string) ([]Music, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMusicByTitle", ctx, title)
	ret0, _ := ret[0].([]Music)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMusicByTitle indicates an expected call of GetMusicByTitle
func (mr *MockStoreMockRecorder) GetMusicByTitle(ctx, title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMusicByTitle", reflect.TypeOf((*MockStore)(nil).GetMusicByTitle), ctx, title)
}
