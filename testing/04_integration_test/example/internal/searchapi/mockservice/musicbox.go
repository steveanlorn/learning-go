// Code generated by MockGen. DO NOT EDIT.
// Source: ./musicbox.go

// Package mockservice is a generated GoMock package.
package mockservice

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	musicbox "github.com/steveanlorn/learning-go/testing/04_integration_test/example/internal/searchapi"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetMusicByTitle mocks base method
func (m *MockService) GetMusicByTitle(ctx context.Context, title string) ([]musicbox.Music, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMusicByTitle", ctx, title)
	ret0, _ := ret[0].([]musicbox.Music)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMusicByTitle indicates an expected call of GetMusicByTitle
func (mr *MockServiceMockRecorder) GetMusicByTitle(ctx, title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMusicByTitle", reflect.TypeOf((*MockService)(nil).GetMusicByTitle), ctx, title)
}
